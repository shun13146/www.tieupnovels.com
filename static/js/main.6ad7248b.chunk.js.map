{"version":3,"sources":["fetcherimpl/BackendNovelFetcher.ts","metaProcessor.ts","components/constants.ts","components/Page.tsx","App.tsx","plugins/rubyPlugin.ts","utils/Tweener.ts","plugins/playMusicPlugin.tsx","plugins/animatedBackgroundPlugin.tsx","serviceWorker.ts","index.tsx","fetcherimpl/NovelFetchError.ts"],"names":["fetchMode","mode","credentials","redirect","BackendNovelFetcherImpl","base_path","ep_suffix","meta_suffix","base","episode_prefix","meta_prefix","this","novel_id","fetch","data","NovelFetchError","type","phase","detail","ok","json","meta","eposode_id","ep","episode","Error","query","meta_processors","text_span","text_line","initializer","finalizer","child_component","view_component","registerInitializer","func","find","it","push","registerFinalizer","registerComponent","id","force","st","console","warn","registerMetaProcessor","hasOwnProperty","unregisterMetaProcessor","pages","a","default","Page","props","state","UNSAFE_componentWillReceiveProps","next","path","target","matcher","pkeys","Object","keys","idx","length","key","startsWith","RegExp","substr","test","log","setState","content","undefined","then","title","document","getElementsByTagName","window","location","hash","consts","textContent","scrollIntoView","block","className","Content","to","src","alt","notFound","React","Component","App","hashType","component","value","Tweener","callback","timestamp","previous","animationId","frame","time","count","delta","overall","requestAnimationFrame","audio","players","muted","volumeInternal","entries","forEach","remove","file","aud","Audio","style","display","volume","loop","body","appendChild","dir","player","tn","timing","pause","play","start","fade","duration","paused","enabled","custom_data","res","resources","addTrack","clearTrack","_","opts","displaying","MusicControlPanel","htmlFor","defaultChecked","onChange","evt","min","max","parseFloat","forceUpdate","width","storage","images","videos","AnimatedBackground","changeBackground","val","scroll_dir","animtime","animtype","setTimeout","shown_background","animation_options","default_background","animationDuration","map","backgroundImage","Boolean","hostname","match","BackendNovelFetcher","initialize","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","mapSeverityToLevel","unknown","error","critical","source","level"],"mappings":"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","file":"static/js/main.6ad7248b.chunk.js","sourcesContent":["/* eslint-disable class-methods-use-this, no-unused-vars */\nimport NovelFetchError from './NovelFetchError';\n\nconst fetchMode: RequestInit = {\n  mode: 'cors',\n  credentials: 'include',\n  redirect: 'follow',\n};\n\nclass BackendNovelFetcherImpl implements NovelFetcher {\n  private base_path: string = '/novels';\n\n  private ep_suffix: string = '.episode.json';\n\n  private meta_suffix: string = '.m.json';\n\n  initialize(\n    {\n      base,\n      episode_prefix,\n      meta_prefix,\n    }: {\n      base?: string,\n      episode_prefix?: string,\n      meta_prefix?: string\n    },\n  ) {\n    this.base_path = typeof base !== 'undefined' ? base : this.base_path;\n    this.ep_suffix = typeof episode_prefix !== 'undefined' ? episode_prefix : this.ep_suffix;\n    this.meta_suffix = typeof meta_prefix !== 'undefined' ? meta_prefix : this.meta_suffix;\n  }\n\n  async fetchNovel(novel_id: string): Promise<NovelMeta> {\n    let data;\n    try {\n      data = await fetch(`${this.base_path}/${novel_id}/meta${this.meta_suffix}`, fetchMode);\n    } catch (err) {\n      throw new NovelFetchError({ type: 'unknown', phase: 'fetch', detail: err });\n    }\n\n    if (!data.ok) {\n      throw new NovelFetchError('novel_not_found');\n    }\n\n    let meta;\n    try {\n      meta = (await data.json()) as NovelMeta;\n    } catch (err) {\n      throw new NovelFetchError({ type: 'unknown', phase: 'parse', detail: err });\n    }\n    return meta;\n  }\n\n  async fetchEpisode(\n    novel_id: string,\n    eposode_id: string,\n  ): Promise<FetchedEpisodeData> {\n    let data;\n    try {\n      data = await fetch(`${this.base_path}/${novel_id}/meta${this.meta_suffix}`, fetchMode);\n    } catch (err) {\n      throw new NovelFetchError({ type: 'unknown', phase: 'fetch', detail: err });\n    }\n\n    if (!data.ok) {\n      throw new NovelFetchError('novel_not_found');\n    }\n\n    let meta;\n    try {\n      meta = (await data.json()) as NovelMeta;\n    } catch (err) {\n      throw new NovelFetchError({ type: 'unknown', phase: 'parse', detail: err });\n    }\n\n    let ep;\n    try {\n      ep = await fetch(`${this.base_path}/${novel_id}/${eposode_id}${this.ep_suffix}`, fetchMode);\n    } catch (err) {\n      throw new NovelFetchError({ type: 'unknown', phase: 'fetch', detail: err });\n    }\n    if (!ep.ok) {\n      throw new NovelFetchError('episode_not_found');\n    }\n\n    let episode;\n    try {\n      episode = (await ep.json()) as Episode;\n    } catch (err) {\n      throw new NovelFetchError({ type: 'unknown', phase: 'parse', detail: err });\n    }\n\n    return { meta, episode };\n  }\n\n  fetchEpisodeList(novel_id: string): Promise<EpisodeMeta[]> {\n    throw new Error('Method not implemented.');\n  }\n\n  searchNovel(query: string): Promise<KeyedStorage<NovelMeta>> {\n    throw new Error('Method not implemented.');\n  }\n}\n\nexport default new BackendNovelFetcherImpl();\n","export const meta_processors: MetaProcessorStorage = {\n  text_span: {},\n  text_line: {},\n  initializer: [],\n  finalizer: [],\n  child_component: {},\n  view_component: {},\n};\n\nexport function registerInitializer(\n  func: ProcessorInitializer,\n  allow_duplication: boolean = false,\n) {\n  if (!allow_duplication && meta_processors.initializer.find((it) => it === func)) {\n    return;\n  }\n  meta_processors.initializer.push(func);\n}\n\nexport function registerFinalizer(\n  func: ProcessorFinalizer,\n  allow_duplication: boolean = false,\n) {\n  if (!allow_duplication && meta_processors.finalizer.find((it) => it === func)) {\n    return;\n  }\n  meta_processors.finalizer.push(func);\n}\n\nexport function registerComponent(\n  type: 'view' | 'child',\n  id: string,\n  func: React.FC,\n  force?: boolean,\n) {\n  const st = (meta_processors[`${type}_component` as keyof MetaProcessorStorage] as any | undefined);\n  if (!st) {\n    console.warn(`unknown storage type: '${type}'`);\n    return;\n  }\n  if (!st[id] || force) {\n    st[id] = func;\n  }\n}\n\nexport function unregisterComponent(type: 'view' | 'child', id: string) {\n  delete (meta_processors[`${type}_component` as keyof MetaProcessorStorage] as any)[id];\n}\n\nexport function registerMetaProcessor(type: 'span', id: string, func: TextSpanMetaProcessor, force?: boolean): void\nexport function registerMetaProcessor(type: 'line', id: string, func: LineMetaProcessor, force?: boolean): void\nexport function registerMetaProcessor(\n  type: 'line' | 'span',\n  id: string,\n  func: LineMetaProcessor | TextSpanMetaProcessor,\n  force?: boolean,\n): void {\n  if (type === 'line') {\n    if (force || !meta_processors.text_line.hasOwnProperty(id)) {\n      meta_processors.text_line[id] = func as LineMetaProcessor;\n    }\n  } else if (type === 'span') {\n    if (force || !meta_processors.text_span.hasOwnProperty(id)) {\n      meta_processors.text_span[id] = func as TextSpanMetaProcessor;\n    }\n  } else {\n    console.warn(`unknown storage type: '${type}'`);\n  }\n}\n\nexport function unregisterMetaProcessor(type: 'line' | 'span', id: string) {\n  delete (meta_processors[`text_${type}` as keyof MetaProcessorStorage] as any)[id];\n}\n","export default {\n  site_title: 'たいあっぷ！',\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport consts from './constants';\n\ntype Props = {path?: string};\ntype LoadError = 'NOT FOUND';\n\nconst pages: {[key: string]: () => Promise<React.FC>} = {\n  '/': async () => (await import('./pages/Top')).default,\n  're^/view/[a-zA-Z0-9]{8}/?$': async () => (await import('./pages/IndexPage')).default,\n  're^/view/[a-zA-Z0-9]{8}/[0-9]+$': async () => (await import('./pages/View')).default,\n};\n\nconst checkPathMatches = (target: string, matcher: RegExp | string) => {\n  if (typeof matcher === 'string') {\n    return target === matcher;\n  }\n  return matcher.test(target);\n};\n\nclass Page extends React.Component<Props, {content?: React.FC | LoadError}> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.UNSAFE_componentWillReceiveProps(this.props);\n  }\n\n  UNSAFE_componentWillReceiveProps(next: Props) {\n    if (!next.path) {\n      return;\n    }\n\n    const pkeys = Object.keys(pages);\n\n    for (let idx = 0; idx < pkeys.length; idx++) {\n      const key = pkeys[idx];\n\n      if (checkPathMatches(next.path, key.startsWith('re^') ? new RegExp(key.substr(2)) : key)) {\n        console.log(`matched ${key}`);\n        this.setState({ content: undefined });\n        pages[key]().then((it) => this.setState({ content: it }));\n        return;\n      }\n    }\n\n    this.setState({ content: 'NOT FOUND' });\n  }\n\n  componentDidUpdate() {\n    const title = document.getElementsByTagName('h1')[0];\n    if (!title || window.location.hash === '#/') {\n      document.title = consts.site_title;\n      return;\n    }\n    document.title = `${consts.site_title} | ${(title.textContent || 'ロード中...')}`;\n    title.scrollIntoView({ block: 'end' });\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  notFound() {\n    return (\n      <div className=\"not-found\">\n        <h1>要求されたページが見つかりませんでした</h1>\n        <p>\n          要求されたページが見つかりませんでした。\n          入力したURLが正しいか確認してください。\n        </p>\n        <p>\n          もし、リンクをたどってこのページが表示された場合は、お手数ですがサイトの管理者に連絡していただけるとありがたく思います。\n          大変ご迷惑をおかけいたしました。\n        </p>\n      </div>\n    );\n  }\n\n  render() {\n    const Content = this.state.content;\n    return (\n      <main className=\"contents-body\">\n        <div className=\"heading\">\n          <div className=\"site-logo\">\n            <Link to=\"/\"><img src=\"/header.png\" alt=\"たいあっぷ！\" /></Link>\n          </div>\n          <div className=\"site-copy\">「作品」を「傑作」に変えよう。</div>\n        </div>\n        {/* eslint-disable-next-line no-nested-ternary */}\n        {Content !== undefined ? Content !== 'NOT FOUND' ? <Content /> : this.notFound() : <div className=\"spinner\" />}\n        <div className=\"footing\">\n          <div className=\"footer-group\">\n            <div className=\"site-logo footer-item\">\n              <Link to=\"/\"><img src=\"/header.png\" alt=\"たいあっぷ！\" /></Link>\n            </div>\n            <div className=\"footer-item site-copy\">「作品」を「傑作」に変えよう。</div>\n          </div>\n          <div className=\"footer-group\">\n            <div className=\"footer-item\">\n              <span>サイト案内</span>\n            </div>\n            <div className=\"footer-item\">\n              <span>ヘルプ</span>\n            </div>\n          </div>\n          <div className=\"footer-group centering\">\n            <div className=\"footer-item\">&copy; 2019 Nishii Yun</div>\n          </div>\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default Page;\n","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport Page from './components/Page';\n\n// import { HumburgerMenu, MenuItemGroup, MenuItem } from './components/HumburgerMenu';\n\n/*const Menu = () => (\n  <HumburgerMenu>\n    <MenuItemGroup title=\"SNS\">\n      <MenuItem intralink={false} linksTo=\"https://twitter.com/\" text=\"Twitter\" />\n      <MenuItem intralink={false} linksTo=\"https://facebook.com/\" text=\"Facebook\" />\n      <MenuItem intralink={false} linksTo=\"https://youtube.com/\" text=\"YouTube\" />\n      <MenuItem intralink={false} linksTo=\"https://instagram.com/\" text=\"Instagram\" />\n    </MenuItemGroup>\n  </HumburgerMenu>\n);*/\n\nconst App: React.FC = () => (\n  <HashRouter {...{ hashType: 'slash' }}>\n    <div className=\"App\">\n      <Route\n        path=\"/\"\n        component={() => <Page path={window.location.hash.substr(1)} />}\n      />\n    </div>\n  </HashRouter>\n);\n\nexport default App;\n","import { registerMetaProcessor } from '../metaProcessor';\n\nregisterMetaProcessor('span', 'ruby', (value, props) => {\n  props['data-ruby'] = value;\n});\n\nexport default {};\n","interface Time {\n  count: number;\n  delta: number | null;\n  overall: number;\n}\n\nexport default class Tweener {\n  timestamp: number | null = null;\n  previous: number | null = null;\n  animationId: number | null = null;\n\n  constructor(public callback: { (time: Time): boolean }) {\n  }\n\n  start() {\n    this.animationId = requestAnimationFrame(this.frame);\n  }\n\n  frame = (frame: number) => {\n    if (this.timestamp === null) {\n      this.timestamp = frame;\n    }\n\n    const time = {\n      count: frame - this.timestamp,\n      delta: this.previous === null ? null : frame - this.previous,\n      overall: frame\n    };\n\n    if (this.callback(time)) {\n      this.animationId = requestAnimationFrame(this.frame);\n    }\n  }\n\n  reset() {\n    this.timestamp = null;\n  }\n}","/* eslint-disable max-classes-per-file */\nimport React, { Component } from 'react';\nimport {\n  registerMetaProcessor,\n  registerComponent,\n  registerInitializer,\n  registerFinalizer,\n} from '../metaProcessor';\nimport Tweener from '../utils/Tweener';\n\nclass AudioTrack {\n  private players: {[id: string]: HTMLAudioElement};\n\n  private muted?: number;\n\n  private volumeInternal: number = 0.5;\n\n  constructor() {\n    this.players = {};\n  }\n\n  clearTrack() {\n    Object.entries(this.players).forEach((it) => it[1].remove());\n    this.players = {};\n  }\n\n  addTrack(id: string, file: string, force?: boolean) {\n    if (!this.players.hasOwnProperty(id) || force) {\n      const aud = new Audio();\n      aud.src = file;\n      aud.style.display = 'none';\n      aud.volume = this.volumeInternal;\n      aud.loop = true;\n      this.players[id] = aud;\n      document.body.appendChild(aud);\n    }\n  }\n\n  fade(id: string, dir: 'start' | 'stop', time: number = 1000) {\n    const player = this.players[id];\n    const tn = new Tweener((timing) => {\n      if (dir === 'stop') {\n        if (time === 0) {\n          player.volume = this.volumeInternal;\n          return true;\n        }\n        if (time < timing.count) {\n          player.pause();\n          player.volume = this.volumeInternal;\n          return false;\n        }\n        player.volume -= this.volumeInternal / time;\n        return true;\n      }\n      if (time === 0) {\n        player.volume = 0;\n        player.play();\n        return true;\n      }\n      if (time < timing.count) {\n        player.volume = this.volumeInternal;\n        return false;\n      }\n      player.volume += this.volumeInternal / time;\n      return true;\n    });\n    tn.start();\n  }\n\n  fadeAll(dir: 'start' | 'stop', time: number = 1000) {\n    Object\n      .keys(this.players)\n      .forEach((it) => {\n        this.fade(it, dir, time);\n      });\n  }\n\n  play(id?: string) {\n    if (!id) {\n      Object\n        .entries(this.players)\n        .forEach(\n          (it) => {\n            const aud = it[1];\n            if (aud.duration <= 0 || aud.paused) {\n              aud.play();\n            }\n          },\n        );\n      return;\n    }\n    const aud = this.players[id];\n    if (aud.duration <= 0 || aud.paused) {\n      aud.play();\n    }\n  }\n\n  pause(id?: string) {\n    if (!id) {\n      Object.entries(this.players).forEach((it) => it[1].pause());\n      return;\n    }\n    const aud = this.players[id];\n    aud.pause();\n  }\n\n  set volume(value: number) {\n    this.volumeInternal = value;\n    Object.entries(this.players).forEach((it) => { it[1].volume = value; });\n  }\n\n  get volume(): number {\n    return this.volumeInternal;\n  }\n\n  set enabled(value: boolean) {\n    if (value === this.enabled) {\n      return;\n    }\n    if (value) {\n      this.muted = this.volume;\n      this.volume = 0;\n    } else {\n      this.volume = this.muted!;\n      this.muted = undefined;\n    }\n  }\n\n  get enabled(): boolean {\n    return this.muted === undefined;\n  }\n}\n\nconst audio = new AudioTrack();\n\nregisterInitializer((data) => {\n  if (!data.meta || !data.meta.custom_data) {\n    return;\n  }\n  const res = data.meta.custom_data.resources;\n  if (!res) {\n    return;\n  }\n  Object\n    .entries(res.audio || {})\n    .forEach((it) => audio.addTrack(it[0], it[1] as string));\n});\n\nregisterFinalizer(() => audio.clearTrack());\n\nregisterMetaProcessor('line', 'play-music', (value, _, opts) => {\n  const { id, dir: displaying, time } = value;\n  if (audio.enabled && opts.displaying === (!displaying || displaying === 'true')) {\n    audio.fade(id, 'start', time || 1000);\n  }\n});\n\nregisterMetaProcessor('line', 'stop-music', (value, _, opts) => {\n  const { id, dir: displaying, time } = value;\n  if (audio.enabled && opts.displaying === (!displaying || displaying === 'true')) {\n    audio.fade(id, 'stop', time || 1000);\n  }\n});\n\nclass MusicControlPanel extends Component {\n  render() {\n    return (\n      <div className=\"music-ui-container\">\n        <input type=\"checkbox\" className=\"music-control-ui-toggle\" id=\"ui-toggle\" />\n        <label htmlFor=\"ui-toggle\" />\n        <div className=\"music-control-ui\">\n          <div className=\"music-enable-ui\">\n            <input\n              type=\"checkbox\"\n              id=\"music-enable\"\n              defaultChecked\n              onChange={(evt) => { audio.enabled = !evt.target.value; }}\n            />\n            <label htmlFor=\"music-enable\" />\n          </div>\n          <div className=\"music-volume-ui\">\n            <input\n              type=\"range\"\n              id=\"music-volume\"\n              min=\"0\"\n              max=\"100\"\n              onChange={(evt) => {\n                audio.volume = parseFloat((evt.target as HTMLInputElement).value) / 100;\n                this.forceUpdate();\n              }}\n            />\n            <label htmlFor=\"music-volume\">\n              <div className=\"vomule-indicator\" style={{ width: `${audio.volume * 162}px` }} />\n            </label>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nregisterComponent('view', 'music', () => <MusicControlPanel />);\n\nexport default {};\n","/* eslint-disable jsx-a11y/media-has-caption */\nimport React, { Component } from 'react';\nimport {\n  registerMetaProcessor,\n  unregisterMetaProcessor,\n  registerComponent,\n  registerInitializer,\n} from '../metaProcessor';\n\ninterface Resources {\n  images: KeyedStorage<string>;\n  videos: KeyedStorage<string>;\n}\n\ninterface Props {\n  resources?: Resources;\n  default_background?: string;\n  default_type?: 'image' | 'video';\n}\n\ninterface State {\n  shown_background?: string;\n  type?: 'image' | 'video'\n  animation_options?: {type: string, time: number};\n}\n\ninterface ChangeBackgroundOptions {\n  next: string;\n  previous: string;\n  time?: number;\n  animtype?: 'fade';\n}\n\ninterface Storage {\n  images: KeyedStorage<string>;\n  videos: KeyedStorage<string>;\n  default_background?: string;\n}\n\nconst storage: Storage = {\n  images: {},\n  videos: {},\n};\n\nclass AnimatedBackground extends Component<{}, State> {\n  constructor(props: {}) {\n    super(props);\n\n    this.state = { shown_background: storage.default_background, type: 'image' };\n  }\n\n  componentDidMount() {\n    registerMetaProcessor('line', 'change-background', this.changeBackground);\n  }\n\n  componentWillUnmount() {\n    unregisterMetaProcessor('line', 'change-background');\n  }\n\n  changeBackground = (val: ChangeBackgroundOptions, _: any, opts: CurrentLineState) => {\n    const { displaying, scroll_dir: dir } = opts;\n\n    if (dir === 'indeterminate') {\n      return;\n    }\n\n    const {\n      next,\n      previous,\n      time: animtime,\n      animtype,\n    } = val;\n    const time = animtime || 500;\n    const type = animtype || 'fade';\n\n    if (!displaying && dir === 'backward') {\n      setTimeout(() => this.setState({\n        shown_background: previous,\n        animation_options: { time, type },\n      }), 10);\n      return;\n    }\n    if (displaying && dir === 'forward') {\n      setTimeout(() => this.setState({\n        shown_background: next,\n        animation_options: { time, type },\n      }), 10);\n    }\n  }\n\n  render() {\n    const { time, type } = this.state.animation_options || {};\n    return (\n      <div className=\"background\" style={{ animationDuration: `${time || 500}ms` }}>\n        {\n          Object\n            .keys(storage.images)\n            .map((it) => ({ id: it, path: storage.images[it] }))\n            .map((it, idx) => (\n              <div\n                className={\n                  `background-image ${type || 'fade'}${\n                    it.id === this.state.shown_background && this.state.type === 'image' ? ' shown' : ''\n                  }`\n                }\n                style={{ backgroundImage: `url(\"${it.path}\")` }}\n                key={idx}\n              />\n            ))\n        }\n        {\n          Object\n            .keys(storage.videos)\n            .map((it) => ({ id: it, path: storage.videos[it] }))\n            .map((it, idx) => (\n              <div\n                className={\n                  `background-wrapper${\n                    it.id === this.state.shown_background && this.state.type === 'video' ? ' shown' : ''\n                  }`\n                }\n                key={idx}\n              >\n                <video className=\"background-video\" src={it.path} />\n              </div>\n            ))\n        }\n      </div>\n    );\n  }\n}\n\nregisterComponent('child', 'background', () => <AnimatedBackground />);\nregisterInitializer((data) => {\n  if (!data.meta) {\n    return;\n  }\n  storage.default_background = data.meta.default_background;\n  if (!data.meta.custom_data) {\n    return;\n  }\n  const res = data.meta.custom_data.resources;\n  if (!res) {\n    return;\n  }\n  storage.images = res.images || {};\n  storage.videos = res.videos || {};\n});\n\nexport default {};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './plugins/rubyPlugin';\nimport './plugins/playMusicPlugin';\nimport './plugins/animatedBackgroundPlugin';\nimport * as serviceWorker from './serviceWorker';\nimport './styles/main.scss';\nimport BackendNovelFetcher from './fetcherimpl/BackendNovelFetcher';\n\nBackendNovelFetcher.initialize({\n  base: 'http://ec2-54-164-152-66.compute-1.amazonaws.com:12354/novels',\n  episode_prefix: '',\n  meta_prefix: '',\n});\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const mapSeverityToLevel: {[key in ErrorSeverity]: string} = {\n  unknown: 'U',\n  warn: 'W',\n  error: 'E',\n  critical: 'C',\n};\n\nexport default class NovelFetchError extends Error {\n  public source: FetchErrorType;\n\n  constructor(source: FetchErrorType) {\n    let level: string;\n    let phase: FetchPhase;\n    let detail: string;\n\n    if (source === 'novel_not_found') {\n      level = 'E';\n      phase = 'fetch';\n      detail = '小説が見つかりませんでした。';\n    } else if (source === 'episode_not_found') {\n      level = 'E';\n      phase = 'fetch';\n      detail = '小説の部分が見つかりませんでした。';\n    } else {\n      level = mapSeverityToLevel[source.type];\n      phase = source.phase;\n      detail = source.detail;\n    }\n    super(`${level}:${phase}:${detail}`);\n    this.source = source;\n  }\n}\n"],"sourceRoot":""}