{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/defineProperty.js","fetcherimpl/PrecompiledFetcher.ts","fetcherimpl/index.ts","components/pages/Top.tsx"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","fetcher","pickups","novels","a","aaaafbfe","episodes","fetchNovel","novel_id","novel","NovelFetchError","default","fetchEpisode","episode_id","episode","index","meta","lines","console","log","some","it","has_next","length","fetchEpisodeList","ret","eps","idx","push","searchNovel","query","Promise","all","keys","filter","hasOwnProperty","map","id","ns","findIndex","mt","reduce","prev","process","FETCHER_IMPL","backendFetcher","precompiledFetcher","Top","prop","state","then","setState","this","className","item","src","binding","alt","title","author","summary","to","window","location","hash","substr","split","undefined","shelf","body","Component"],"mappings":"yGAAe,SAASA,EAAgBC,EAAKC,EAAKC,GAYhD,OAXID,KAAOD,EACTG,OAAOC,eAAeJ,EAAKC,EAAK,CAC9BC,MAAOA,EACPG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZP,EAAIC,GAAOC,EAGNF,EAZT,iC,soBCGA,ICAIQ,EDAEC,EAAU,CACd,WACA,YAEIC,EAAiD,CACrD,WAAW,WAAX,2BAAY,sBAAAC,EAAA,8EAAY,mCAAZ,yCAAZ,kDAAW,GACX,SAAW,WAAX,2BAAY,sBAAAA,EAAA,8EAAY,mCAAZ,yCAAZ,kDAAW,GACXC,SAAS,WAAD,2BAAE,sBAAAD,EAAA,8EAAY,mCAAZ,yCAAF,kDAAC,IAELE,EAAmD,CACvD,WAAY,sBACV,sBAAAF,EAAA,8EAAY,mCAAZ,yCADU,qBAEV,sBAAAA,EAAA,8EAAY,mCAAZ,yCAFU,qBAGV,sBAAAA,EAAA,8EAAY,mCAAZ,yCAHU,qBAIV,sBAAAA,EAAA,8EAAY,mCAAZ,yCAJU,qBAKV,sBAAAA,EAAA,8EAAY,mCAAZ,yCALU,qBAMV,sBAAAA,EAAA,8EAAY,mCAAZ,yCANU,qBAOV,sBAAAA,EAAA,8EAAY,mCAAZ,0CAEF,SAAY,sBACV,sBAAAA,EAAA,8EAAY,kCAAZ,yCADU,qBAEV,sBAAAA,EAAA,8EAAY,kCAAZ,yCAFU,qBAGV,sBAAAA,EAAA,8EAAY,kCAAZ,yCAHU,qBAIV,sBAAAA,EAAA,8EAAY,kCAAZ,0CAEFC,SAAU,sBACR,sBAAAD,EAAA,8EAAY,mCAAZ,yCADQ,qBAER,sBAAAA,EAAA,8EAAY,mCAAZ,yCAFQ,qBAGR,sBAAAA,EAAA,8EAAY,mCAAZ,2CAIW,GACPG,WADO,iDACIC,GADJ,yEAELC,EAAQN,EAAOK,GAFV,sBAIH,IAAIE,IAAgB,mBAJjB,uBAMGD,IANH,uCAMmBE,SANnB,+FAQPC,aARO,iDAQMJ,EAAkBK,GARxB,mFASLJ,EAAQN,EAAOK,GATV,sBAWH,IAAIE,IAAgB,mBAXjB,UAcLI,EAAUR,EAASE,GADnBO,EAAwC,EAA/BF,GAbJ,sBAgBH,IAAIH,IAAgB,qBAhBjB,uBAkBoBI,IAlBpB,uBAkBsCH,QAAzCK,EAlBG,EAkBHA,KAAMC,EAlBH,EAkBGA,MACdC,QAAQC,IAAIF,EAAMG,KAAK,SAACC,GAAD,OAAcA,KAnB1B,UAqBIZ,IArBJ,2BAqBoBE,QArBpB,KAsBA,CACPM,QACAD,KAAK,EAAD,CACFR,WACAc,SAAUhB,EAASE,GAAUe,OAAUR,EAAQ,GAC5CC,IA3BE,mBAqBTA,KArBS,KAsBTF,QAtBS,yGAgCPU,iBAhCO,iDAgCUhB,GAhCV,iFAkCLiB,EAAM,GADNC,EAAMpB,EAASE,GAjCV,sBAoCH,IAAIE,IAAgB,mBApCjB,OAsCFiB,EAAM,EAtCJ,YAsCOA,EAAMD,EAAIH,QAtCjB,wBAuCHF,EAAKK,EAAIC,GAvCN,SAwCeN,IAxCf,OAwCDL,EAxCC,OAwC4BL,QAA7BK,KACRS,EAAIG,KAAJ,GAAWpB,WAAUc,SAAUK,IAAQD,EAAIH,OAAS,GAAMP,IAzCjD,QAsCyBW,IAtCzB,gDA2CJF,GA3CI,gGA6CPI,YA7CO,iDA6CKC,GA7CL,sFA8CIC,QAAQC,IACrBpC,OACGqC,KAAK9B,GACL+B,OAAO,SAACb,GAAD,OAAQlB,EAAOgC,eAAed,KACrCe,IAHH,iBAAAxC,OAAA,IAAAA,CAAA,SAGO,WAAOyB,GAAP,SAAAjB,EAAA,qEAA8BD,EAAOkB,KAArC,+BAAgDA,EAAhD,mBAAiBZ,MAAjB,KAA4C4B,GAA5C,gDAHP,wDA/CS,cA8CPC,EA9CO,OAmDG,kBAAVR,IACFQ,EAAKA,EAAGJ,OAAO,SAACb,GAAD,OAAqD,IAA7CnB,EAAQqC,UAAU,SAACC,GAAD,OAAQA,IAAOnB,EAAGgB,QApDlD,kBAsDJC,EAAGG,OAAO,SAACC,EAAMrB,GAAP,wBAAkBA,EAAGgB,GAAKhB,EAAGZ,OAAUiC,IAAS,KAtDtD,gGC7BbzC,EAD+B,YAA7B0C,8CAAYC,aACJC,IAEAC,EAGG7C,O,+GCET8C,E,YACJ,WAAYC,GAAY,IAAD,8BACrB,4CAAMA,KAEDC,MAAQ,GAHQ,E,iFAMF,IAAD,OAClBhD,IACG4B,YAAY,IACZqB,KAAK,SAAC/C,GAAD,OAAY,EAAKgD,SAAS,CAAEhD,aAEpCF,IACG4B,YAAY,iBACZqB,KAAK,SAAChD,GAAD,OAAa,EAAKiD,SAAS,CAAEjD,gB,8BAG9B,IAAD,OACN,OAAKkD,KAAKH,MAAM9C,OAQd,yBAAKkD,UAAU,aAEXzD,OACGqC,KAAKmB,KAAKH,MAAM9C,QAChB+B,OAAO,SAACb,GAAD,OAAQ,EAAK4B,MAAM9C,OAAQgC,eAAed,KACjDe,IAAI,SAACf,GACJ,IAAMiC,EAAO,EAAKL,MAAM9C,OAAQkB,GAChC,OACE,yBAAKgC,UAAU,QACb,yBAAKE,IAAKD,EAAKE,QAASC,IAAKH,EAAKI,MAAOL,UAAU,UACnD,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,SAASC,EAAKI,OAC7B,yBAAKL,UAAU,YACb,yBAAKA,UAAU,UAAUC,EAAKK,QAC9B,yBAAKN,UAAU,kBAAkBC,EAAKK,QACtC,yBAAKN,UAAU,oBAAoBC,EAAKK,SAE1C,yBAAKN,UAAU,QAAf,iBAEF,yBAAKA,UAAU,WACZC,EAAKM,UAGV,kBAAC,IAAD,CAAMC,GAAE,gBAAWxC,GAAMgC,UAAU,kBA9B7C,yBAAKA,UAAU,aACb,yBAAKA,UAAU,e,gCAsCZ,IAAD,OACR,OAAKD,KAAKH,MAAM/C,QAQd,yBAAKmD,UAAU,WAEXzD,OACGqC,KAAKmB,KAAKH,MAAM/C,SAChBgC,OAAO,SAACb,GAAD,OAAQ,EAAK4B,MAAM/C,QAASiC,eAAed,KAClDe,IAAI,SAACf,GACJ,IAAMiC,EAAO,EAAKL,MAAM/C,QAASmB,GACjC,OACE,yBAAKgC,UAAU,QACb,yBAAKE,IAAKD,EAAKE,QAASC,IAAKH,EAAKI,MAAOL,UAAU,UACnD,yBAAKA,UAAU,WACZC,EAAKM,SAER,kBAAC,IAAD,CAAMC,GAAE,gBAAWxC,GAAMgC,UAAU,kBAnB7C,yBAAKA,UAAU,WACb,yBAAKA,UAAU,e,6BA6BrB,OA9FsBS,OAAOC,SAASC,KAAKC,OAAO,GA6FvBC,MAAM,KAAK,IAEtC,IAAK,GACL,UAAKC,EACH,OACE,yBAAKd,UAAU,sBACb,yBAAKA,UAAU,gBACb,oEACCD,KAAKlD,UACN,wDACCkD,KAAKgB,UAId,IAAK,OACH,OACE,8BAEJ,QACE,OAAO,Q,+BAKT,OAAOhB,KAAKiB,W,GAnHEC,aAuHF,4BAAM,kBAACvB,EAAD","file":"static/js/5.a4a23698.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","/* eslint-disable no-await-in-loop, quote-props */\nimport NovelFetchError from './NovelFetchError';\n\nconst pickups = [\n  '4157ac86',\n  'aaaafbfe'\n];\nconst novels: KeyedStorage<{(): Promise<NovelMeta>}> = {\n  '4157ac86': async () => import('./novel_data/.novels/4157ac86/meta.json') as any as Promise<NovelMeta>,\n  '21481650': async () => import('./novel_data/.novels/21481650/meta.json') as any as Promise<NovelMeta>,\n  aaaafbfe: async () => import('./novel_data/.novels/aaaafbfe/meta.json') as any as Promise<NovelMeta>,\n};\nconst episodes: KeyedStorage<{(): Promise<Episode>}[]> = {\n  '4157ac86': [\n    async () => import('./novel_data/.novels/4157ac86/episode_0001.json') as any as Promise<Episode>,\n    async () => import('./novel_data/.novels/4157ac86/episode_0002.json') as any as Promise<Episode>,\n    async () => import('./novel_data/.novels/4157ac86/episode_0003.json') as any as Promise<Episode>,\n    async () => import('./novel_data/.novels/4157ac86/episode_0004.json') as any as Promise<Episode>,\n    async () => import('./novel_data/.novels/4157ac86/episode_0005.json') as any as Promise<Episode>,\n    async () => import('./novel_data/.novels/4157ac86/episode_0006.json') as any as Promise<Episode>,\n    async () => import('./novel_data/.novels/4157ac86/episode_0007.json') as any as Promise<Episode>,\n  ],\n  '21481650': [\n    async () => import('./novel_data/.novels/21481650/episode_0001.json') as any as Promise<Episode>,\n    async () => import('./novel_data/.novels/21481650/episode_0002.json') as any as Promise<Episode>,\n    async () => import('./novel_data/.novels/21481650/episode_0003.json') as any as Promise<Episode>,\n    async () => import('./novel_data/.novels/21481650/episode_0004.json') as any as Promise<Episode>,\n  ],\n  aaaafbfe: [\n    async () => import('./novel_data/.novels/aaaafbfe/episode_0001.json') as any as Promise<Episode>,\n    async () => import('./novel_data/.novels/aaaafbfe/episode_0002.json') as any as Promise<Episode>,\n    async () => import('./novel_data/.novels/aaaafbfe/episode_0003.json') as any as Promise<Episode>,\n  ],\n};\n\nexport default {\n  async fetchNovel(novel_id: string): Promise<NovelMeta> {\n    const novel = novels[novel_id];\n    if (!novel) {\n      throw new NovelFetchError('novel_not_found');\n    }\n    return (await novel() as any).default;\n  },\n  async fetchEpisode(novel_id: string, episode_id: string): Promise<FetchedEpisodeData> {\n    const novel = novels[novel_id];\n    if (!novel) {\n      throw new NovelFetchError('novel_not_found');\n    }\n    const index = (episode_id as any as number) * 1;\n    const episode = episodes[novel_id][index];\n    if (!episode) {\n      throw new NovelFetchError('episode_not_found');\n    }\n    const { meta, lines } = (await episode() as any).default;\n    console.log(lines.some((it: any) => !it));\n    return {\n      meta: (await novel() as any).default,\n      episode: {\n        lines,\n        meta: {\n          novel_id,\n          has_next: episodes[novel_id].length > (index + 1),\n          ...meta,\n        },\n      },\n    };\n  },\n  async fetchEpisodeList(novel_id: string): Promise<EpisodeMeta[]> {\n    const eps = episodes[novel_id];\n    const ret = [];\n    if (!eps) {\n      throw new NovelFetchError('novel_not_found');\n    }\n    for (let idx = 0; idx < eps.length; idx++) {\n      const it = eps[idx];\n      const { meta } = (await it() as any).default;\n      ret.push({ novel_id, has_next: idx !== eps.length - 1, ...meta });\n    }\n    return ret;\n  },\n  async searchNovel(query: string): Promise<KeyedStorage<NovelMeta>> {\n    let ns = await Promise.all(\n      Object\n        .keys(novels)\n        .filter((it) => novels.hasOwnProperty(it))\n        .map(async (it) => ({ novel: await novels[it](), id: it })));\n    if (query === 'filter:pickup') {\n      ns = ns.filter((it) => pickups.findIndex((mt) => mt === it.id) !== -1);\n    }\n    return ns.reduce((prev, it) => ({ [it.id]: it.novel, ...prev }), {});\n  },\n};\n","import backendFetcher from './BackendNovelFetcher';\nimport precompiledFetcher from './PrecompiledFetcher';\n\nlet fetcher: NovelFetcher;\n\nif (process.env.FETCHER_IMPL === 'backend') {\n  fetcher = backendFetcher;\n} else {\n  fetcher = precompiledFetcher;\n}\n\nexport default fetcher;\n","/* eslint-disable class-methods-use-this */\n/* eslint-disable react/prefer-stateless-function */\nimport React, { Component, FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport fetcher from '../../fetcherimpl';\n\ninterface State {\n  novels?: KeyedStorage<NovelMeta>;\n  pickups?: KeyedStorage<NovelMeta>;\n}\n\nconst getLocation = () => window.location.hash.substr(1);\n\nclass Top extends Component<{}, State> {\n  constructor(prop: any) {\n    super(prop);\n\n    this.state = {};\n  }\n\n  componentDidMount() {\n    fetcher\n      .searchNovel('')\n      .then((novels) => this.setState({ novels }));\n\n    fetcher\n      .searchNovel('filter:pickup')\n      .then((pickups) => this.setState({ pickups }));\n  }\n\n  shelf() {\n    if (!this.state.novels) {\n      return (\n        <div className=\"bookshelf\">\n          <div className=\"spinner\" />\n        </div>\n      );\n    }\n    return (\n      <div className=\"bookshelf\">\n        {\n          Object\n            .keys(this.state.novels)\n            .filter((it) => this.state.novels!.hasOwnProperty(it))\n            .map((it) => {\n              const item = this.state.novels![it];\n              return (\n                <div className=\"book\">\n                  <img src={item.binding} alt={item.title} className=\"image\" />\n                  <div className=\"detail-container\">\n                    <div className=\"upper-items\">\n                      <div className=\"title\">{item.title}</div>\n                      <div className=\"creators\">\n                        <div className=\"author\">{item.author}</div>\n                        <div className=\"music-director\">{item.author}</div>\n                        <div className=\"graphic-designer\">{item.author}</div>\n                      </div>\n                      <div className=\"type\">短編</div>\n                    </div>\n                    <div className=\"summary\">\n                      {item.summary}\n                    </div>\n                  </div>\n                  <Link to={`/view/${it}`} className=\"clicktrap\" />\n                </div>\n              );\n            })\n        }\n      </div>\n    );\n  }\n\n  pickups() {\n    if (!this.state.pickups) {\n      return (\n        <div className=\"pickups\">\n          <div className=\"spinner\" />\n        </div>\n      );\n    }\n    return (\n      <div className=\"pickups\">\n        {\n          Object\n            .keys(this.state.pickups)\n            .filter((it) => this.state.pickups!.hasOwnProperty(it))\n            .map((it) => {\n              const item = this.state.pickups![it];\n              return (\n                <div className=\"book\">\n                  <img src={item.binding} alt={item.title} className=\"image\" />\n                  <div className=\"summary\">\n                    {item.summary}\n                  </div>\n                  <Link to={`/view/${it}`} className=\"clicktrap\" />\n                </div>\n              );\n            })\n        }\n      </div>\n    );\n  }\n\n  body() {\n    const elem = getLocation().split('/')[1];\n    switch (elem) {\n    case '':\n    case undefined:\n      return (\n        <div className=\"contents-container\">\n          <div className=\"main-content\">\n            <h2>ピックアップ</h2>\n            {this.pickups()}\n            <h2>作品一覧</h2>\n            {this.shelf()}\n          </div>\n        </div>\n      );\n    case 'list':\n      return (\n        <div />\n      );\n    default:\n      return null;\n    }\n  }\n\n  render() {\n    return this.body();\n  }\n}\n\nexport default (() => <Top />) as FC;\n"],"sourceRoot":""}